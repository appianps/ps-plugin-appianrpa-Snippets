{"id":"IBM3270Library","robotType":"NANO","mainClass":"com.appian.rpa.library.ibm3270.IBM3270Library","actions":["init","maximizeWindow","tryHacl","cleanUp"],"conditionalActions":[],"fieldLinks":[{"fieldName":"robot","fieldLinkValue":"::robot"}],"actionDetails":[{"id":"init","implementation":"/**\n\t * Initialization of the library. This method is called prior to any other\n\t * method in the library.\n\t */\n@Override\npublic void init() {\n    server = (IJidokaServer<Serializable>) JidokaFactory.getServer();\n    client = IClient.getInstance(robot);\n}"},{"id":"maximizeWindow","implementation":"/**\n\t * Maximize Window\n\t */\n@JidokaMethod(name = \"IBM Maximize Window\", description = \"IBM3270Library:v1.0.0: Maximizes the window\")\npublic void maximizeWindow() throws JidokaFatalException {\n    ibm3270Commons.maximizeWindow();\n}"},{"id":"tryHacl","implementation":"@JidokaMethod(name = \"IBM Try HACL\", description = \"IBM3270Library:v1.0.0: Trying HACL\")\npublic void tryHacl() throws JidokaException, ECLErr, InterruptedException {\n    Properties prop = new  Properties();\n    File f = new  File(\"C:\\\\Program Files (x86)\\\\IBM\\\\Personal Communications\\\\private\\\\GSO1tls-MAI.ws\");\n    server.debug(\"Print file exists: \" + f.exists());\n    prop.put(\"SESSION_HOST\", \"C:\\\\Program Files (x86)\\\\IBM\\\\Personal Communications\\\\private\\\\GSO1tls-MAI.ws\");\n    //\t\tprop.put(\"SESSION_HOST\", \"GSO1tls-MAI.ws\");\n    //\t\tprop.put(\"SESSION_HOST\", \"c:\\\\program files (x86)\\\\ibm\\\\personal communications\\\\private\\\\gso1tls-mai.ws\");\n    prop.put(\"SESSION_WIN_STATE\", \"MAX\");\n    prop.put(\"SESSION_VT_KEYPAD \", \"SESSION_VT_KEYPAD_APPL\");\n    prop.put(\"SESSION_VT_LOCAL_ECHO\", \"SESSION_VT_LOCAL_ECHO_ON\");\n    //\t\tprop.put(ECLSession.SESSION_HOST_PORT, \"992\");\n    try {\n        ECLSession session = new  ECLSession(prop);\n        server.debug(\"Print prop session host: \" + prop.get(ECLSession.SESSION_HOST));\n        server.debug(\"Print prop port: \" + prop.get(ECLSession.SESSION_HOST_PORT));\n        server.debug(\"Print session label: \" + session.getSessionLabel());\n        server.debug(\"Print session protocol: \" + session.getSecurityProtocol());\n        server.debug(\"Print session properties: \" + session.getProperties());\n        session.StartCommunication();\n        Thread.sleep(5000);\n        if (!(session).IsCommStarted()) {\n            //\n            try {\n                Thread.sleep(2000);\n            } catch (InterruptedException e) {\n                server.debug(\"Exception: \" + e.getMessage());\n            }\n        }\n        server.debug(\"Print IsCommStarted: \" + session.IsCommStarted());\n        server.debug(\"Print isConnected: \" + session.isConnected());\n        //\t\t\tsession.connect();\n        //\t\t\tThread.sleep(10000);\n        //\t\t\tserver.debug(\"Print2 IsCommStarted: \" + session.IsCommStarted());\n        //\t\t\tserver.debug(\"Print2 isConnected: \" + session.isConnected());\n        ECLOIA eclOIA = session.GetOIA();\n        ECLPS ps = session.GetPS();\n        server.debug(\"Print oia insert mode: \" + eclOIA.IsInsertMode());\n        server.debug(\"Print ps1 row: \" + ps.GetCursorRow());\n        server.debug(\"Print ps1 col: \" + ps.GetCursorCol());\n        session.GetPS().SetCursorPos(10, 10);\n        server.debug(\"Print ps2 row: \" + ps.GetCursorRow());\n        server.debug(\"Print ps2 col: \" + ps.GetCursorCol());\n        session.GetPS().SendKeys(\"XYZ\");\n        // Screen size is assumed to be 24x80\n        char[] temp = new char[1921];\n        ps.GetScreen(temp, 1920, 1, 1920, ps.TEXT_PLANE);\n        server.debug(\"Print screen: \" + new  String(temp));\n        ECLFieldList fieldList = session.GetPS().GetFieldList();\n        server.debug(\"Print field: \" + fieldList.FindField(1, 2).getString());\n    } catch (ECLErr e) {\n        System.out.println(e.GetMsgText());\n    }\n}"},{"id":"cleanUp","implementation":"No source code available"}],"conditionalActionDetails":[],"sdkMethods":[{"id":"maximizeWindow","returnClazz":"void","attributes":{"returnClass":"AS_DEFINED","name":"IBM Maximize Window","description":"IBM3270Library:v1.0.0: Maximizes the window","iconClass":"jf-console"},"parameters":[]},{"id":"setEmulator","returnClazz":"void","attributes":{"returnClass":"AS_DEFINED","name":"IBM Set Emulator","description":"IBM3270Library:v1.0.0: Sets the correct emulator type (PCOMM or W3270)","iconClass":"jf-console"},"parameters":[{"id":"arg0","clazz":"com.novayre.jidoka.client.api.SDKParameterMap","enumValues":[],"attributes":{"jsonMap":"","defaultValue":"","name":"Nested parameters","type":"NESTED"},"nestedParameters":[{"dependsOn":"","defaultValue":"","groupId":"","tooltip":"","multiple":false,"colWidth":100,"instructionalText":"","serviceBasedFeatureToggle":"DEFAULT","type":"AS_DEFINED","validateMsg":"","rendition":[],"name":"Window Title Xpath","placeholderText":"","optionsService":"NONE","id":"Window Title Xpath","clazz":"","validate":""},{"dependsOn":"","defaultValue":"","groupId":"","tooltip":"","multiple":false,"colWidth":100,"instructionalText":"","serviceBasedFeatureToggle":"DEFAULT","type":"AS_DEFINED","validateMsg":"","rendition":[],"name":"Emulator Type","placeholderText":"","optionsService":"NONE","id":"Emulator Type","clazz":"","validate":""}]}]},{"id":"enterCredentialByUsername","returnClazz":"void","attributes":{"returnClass":"AS_DEFINED","name":"IBM Enter Credential","description":"IBM3270Library:v1.0.0: Enters credentials into emulator","iconClass":"jf-console"},"parameters":[{"id":"arg0","clazz":"com.novayre.jidoka.client.api.SDKParameterMap","enumValues":[],"attributes":{"jsonMap":"","defaultValue":"","name":"Nested parameters","type":"NESTED"},"nestedParameters":[{"dependsOn":"","defaultValue":"","groupId":"","tooltip":"","multiple":false,"colWidth":100,"instructionalText":"","serviceBasedFeatureToggle":"DEFAULT","type":"AS_DEFINED","validateMsg":"","rendition":[],"name":"Application Name for Credentials","placeholderText":"","optionsService":"NONE","id":"Application Name for Credentials","clazz":"","validate":""},{"dependsOn":"","defaultValue":"","groupId":"","tooltip":"","multiple":false,"colWidth":100,"instructionalText":"","serviceBasedFeatureToggle":"DEFAULT","type":"AS_DEFINED","validateMsg":"","rendition":[],"name":"Username for Credentials","placeholderText":"","optionsService":"NONE","id":"Username for Credentials","clazz":"","validate":""},{"dependsOn":"","defaultValue":"","groupId":"","tooltip":"","multiple":false,"colWidth":100,"instructionalText":"","serviceBasedFeatureToggle":"DEFAULT","type":"ENUMERATOR","validateMsg":"","rendition":["OPTIONS_EXPAND_HORIZONTALLY"],"name":"Is Username? Otherwise Password","placeholderText":"","optionsService":"JIDOKA_PARAMETER_BOOLEAN","id":"Is Username? Otherwise Password","clazz":"com.novayre.jidoka.client.api.EJidokaParameterBoolean","validate":""}]}]},{"id":"getTextAtCoordinate","returnClazz":"java.lang.String","attributes":{"returnClass":"AS_DEFINED","name":"IBM Get Text at Coordinate","description":"IBM3270Library:v1.0.0: Takes in a coordinate(emulator x y coordinate starting at 1) and length of text to return from that line, then returns the text located there","iconClass":"jf-console"},"parameters":[{"id":"arg0","clazz":"com.novayre.jidoka.client.api.SDKParameterMap","enumValues":[],"attributes":{"jsonMap":"","defaultValue":"","name":"Nested parameters","type":"NESTED"},"nestedParameters":[{"dependsOn":"","defaultValue":"","groupId":"","tooltip":"","multiple":false,"colWidth":100,"instructionalText":"","serviceBasedFeatureToggle":"DEFAULT","type":"AS_DEFINED","validateMsg":"","rendition":[],"name":"X Coordinate","placeholderText":"","optionsService":"NONE","id":"X Coordinate","clazz":"","validate":""},{"dependsOn":"","defaultValue":"","groupId":"","tooltip":"","multiple":false,"colWidth":100,"instructionalText":"","serviceBasedFeatureToggle":"DEFAULT","type":"AS_DEFINED","validateMsg":"","rendition":[],"name":"Y Coordinate","placeholderText":"","optionsService":"NONE","id":"Y Coordinate","clazz":"","validate":""},{"dependsOn":"","defaultValue":"","groupId":"","tooltip":"","multiple":false,"colWidth":100,"instructionalText":"","serviceBasedFeatureToggle":"DEFAULT","type":"AS_DEFINED","validateMsg":"","rendition":[],"name":"Text Length to Read","placeholderText":"","optionsService":"NONE","id":"Text Length to Read","clazz":"","validate":""}]}]},{"id":"writeAtCoordinates","returnClazz":"void","attributes":{"returnClass":"AS_DEFINED","name":"IBM Write at Coordinates","description":"IBM3270Library:v1.0.0: Writes text in emulator at specified location (handles slow typing & special characters","iconClass":"jf-console"},"parameters":[{"id":"arg0","clazz":"com.novayre.jidoka.client.api.SDKParameterMap","enumValues":[],"attributes":{"jsonMap":"","defaultValue":"","name":"Nested parameters","type":"NESTED"},"nestedParameters":[{"dependsOn":"","defaultValue":"","groupId":"","tooltip":"","multiple":false,"colWidth":100,"instructionalText":"","serviceBasedFeatureToggle":"DEFAULT","type":"AS_DEFINED","validateMsg":"","rendition":[],"name":"X Coordinate","placeholderText":"","optionsService":"NONE","id":"X Coordinate","clazz":"","validate":""},{"dependsOn":"","defaultValue":"","groupId":"","tooltip":"","multiple":false,"colWidth":100,"instructionalText":"","serviceBasedFeatureToggle":"DEFAULT","type":"AS_DEFINED","validateMsg":"","rendition":[],"name":"Y Coordinate","placeholderText":"","optionsService":"NONE","id":"Y Coordinate","clazz":"","validate":""},{"dependsOn":"","defaultValue":"","groupId":"","tooltip":"","multiple":false,"colWidth":100,"instructionalText":"","serviceBasedFeatureToggle":"DEFAULT","type":"AS_DEFINED","validateMsg":"","rendition":[],"name":"Text to Write","placeholderText":"","optionsService":"NONE","id":"Text to Write","clazz":"","validate":""}]}]},{"id":"bulkWriteAtCoordinates","returnClazz":"void","attributes":{"returnClass":"AS_DEFINED","name":"IBM Bulk Write at Coordinates","description":"IBM3270Library:v1.0.0: Writes text in bulk at specified locations (handles slow typing & special characters","iconClass":"jf-console"},"parameters":[{"id":"arg0","clazz":"com.novayre.jidoka.client.api.SDKParameterMap","enumValues":[],"attributes":{"jsonMap":"","defaultValue":"","name":"Nested parameters","type":"NESTED"},"nestedParameters":[{"dependsOn":"","defaultValue":"","groupId":"","tooltip":"","multiple":false,"colWidth":100,"instructionalText":"Expects JSON list object with fields 'text', 'x', and 'y' - for example a!toJson({{text:\"test1\",x:1,y:1},{text:\"test2\",x:5,y:5}})","serviceBasedFeatureToggle":"DEFAULT","type":"AS_DEFINED","validateMsg":"","rendition":[],"name":"Bulk Test & XY Coordinates (JSON)","placeholderText":"","optionsService":"NONE","id":"Bulk Test & XY Coordinates (JSON)","clazz":"","validate":""}]}]},{"id":"findText","returnClazz":"java.util.List","attributes":{"returnClass":"AS_DEFINED","name":"IBM Find Text","description":"IBM3270Library:v1.0.0: Takes in a text string and returns the xy location (integer array) in the emulator","iconClass":"jf-console"},"parameters":[{"id":"arg0","clazz":"com.novayre.jidoka.client.api.SDKParameterMap","enumValues":[],"attributes":{"jsonMap":"","defaultValue":"","name":"Nested parameters","type":"NESTED"},"nestedParameters":[{"dependsOn":"","defaultValue":"","groupId":"","tooltip":"","multiple":false,"colWidth":100,"instructionalText":"","serviceBasedFeatureToggle":"DEFAULT","type":"AS_DEFINED","validateMsg":"","rendition":[],"name":"Text to Locate","placeholderText":"","optionsService":"NONE","id":"Text to Locate","clazz":"","validate":""}]}]},{"id":"writeHere","returnClazz":"void","attributes":{"returnClass":"AS_DEFINED","name":"IBM Write Here","description":"IBM3270Library:v1.0.0: Writes text in emulator at current location (handles slow typing & special characters","iconClass":"jf-console"},"parameters":[{"id":"arg0","clazz":"com.novayre.jidoka.client.api.SDKParameterMap","enumValues":[],"attributes":{"jsonMap":"","defaultValue":"","name":"Nested parameters","type":"NESTED"},"nestedParameters":[{"dependsOn":"","defaultValue":"","groupId":"","tooltip":"","multiple":false,"colWidth":100,"instructionalText":"","serviceBasedFeatureToggle":"DEFAULT","type":"AS_DEFINED","validateMsg":"","rendition":[],"name":"Text to Write","placeholderText":"","optionsService":"NONE","id":"Text to Write","clazz":"","validate":""}]}]},{"id":"goToCoordinates","returnClazz":"void","attributes":{"returnClass":"AS_DEFINED","name":"IBM Go to Coordinates","description":"IBM3270Library:v1.0.0: Takes in a x y int list coordinates and goes to that position in emulator with an offset","iconClass":"jf-console"},"parameters":[{"id":"arg0","clazz":"com.novayre.jidoka.client.api.SDKParameterMap","enumValues":[],"attributes":{"jsonMap":"","defaultValue":"","name":"Nested parameters","type":"NESTED"},"nestedParameters":[{"dependsOn":"","defaultValue":"","groupId":"","tooltip":"","multiple":false,"colWidth":100,"instructionalText":"","serviceBasedFeatureToggle":"DEFAULT","type":"AS_DEFINED","validateMsg":"","rendition":[],"name":"X Coordinate","placeholderText":"","optionsService":"NONE","id":"X Coordinate","clazz":"","validate":""},{"dependsOn":"","defaultValue":"","groupId":"","tooltip":"","multiple":false,"colWidth":100,"instructionalText":"","serviceBasedFeatureToggle":"DEFAULT","type":"AS_DEFINED","validateMsg":"","rendition":[],"name":"Y Coordinate","placeholderText":"","optionsService":"NONE","id":"Y Coordinate","clazz":"","validate":""}]}]},{"id":"writeAtLabel","returnClazz":"void","attributes":{"returnClass":"AS_DEFINED","name":"IBM Write at Label","description":"IBM3270Library:v1.0.0: Writes text in emulator at specified label with optional offset (handles slow typing & special characters","iconClass":"jf-console"},"parameters":[{"id":"arg0","clazz":"com.novayre.jidoka.client.api.SDKParameterMap","enumValues":[],"attributes":{"jsonMap":"","defaultValue":"","name":"Nested parameters","type":"NESTED"},"nestedParameters":[{"dependsOn":"","defaultValue":"","groupId":"","tooltip":"","multiple":false,"colWidth":100,"instructionalText":"","serviceBasedFeatureToggle":"DEFAULT","type":"AS_DEFINED","validateMsg":"","rendition":[],"name":"Field Label","placeholderText":"","optionsService":"NONE","id":"Field Label","clazz":"","validate":""},{"dependsOn":"","defaultValue":"","groupId":"","tooltip":"","multiple":false,"colWidth":100,"instructionalText":"","serviceBasedFeatureToggle":"DEFAULT","type":"AS_DEFINED","validateMsg":"","rendition":[],"name":"X Offset","placeholderText":"","optionsService":"NONE","id":"X Offset","clazz":"","validate":""},{"dependsOn":"","defaultValue":"","groupId":"","tooltip":"","multiple":false,"colWidth":100,"instructionalText":"","serviceBasedFeatureToggle":"DEFAULT","type":"AS_DEFINED","validateMsg":"","rendition":[],"name":"Y Offset","placeholderText":"","optionsService":"NONE","id":"Y Offset","clazz":"","validate":""},{"dependsOn":"","defaultValue":"","groupId":"","tooltip":"","multiple":false,"colWidth":100,"instructionalText":"","serviceBasedFeatureToggle":"DEFAULT","type":"AS_DEFINED","validateMsg":"","rendition":[],"name":"Text to Write","placeholderText":"","optionsService":"NONE","id":"Text to Write","clazz":"","validate":""}]}]},{"id":"goToTextPosition","returnClazz":"void","attributes":{"returnClass":"AS_DEFINED","name":"IBM Go to Text Position","description":"IBM3270Library:v1.0.0: Takes in a text string and goes to that position in emulator","iconClass":"jf-console"},"parameters":[{"id":"arg0","clazz":"com.novayre.jidoka.client.api.SDKParameterMap","enumValues":[],"attributes":{"jsonMap":"","defaultValue":"","name":"Nested parameters","type":"NESTED"},"nestedParameters":[{"dependsOn":"","defaultValue":"","groupId":"","tooltip":"","multiple":false,"colWidth":100,"instructionalText":"","serviceBasedFeatureToggle":"DEFAULT","type":"AS_DEFINED","validateMsg":"","rendition":[],"name":"Text to Locate","placeholderText":"","optionsService":"NONE","id":"Text to Locate","clazz":"","validate":""},{"dependsOn":"","defaultValue":"","groupId":"","tooltip":"","multiple":false,"colWidth":100,"instructionalText":"","serviceBasedFeatureToggle":"DEFAULT","type":"AS_DEFINED","validateMsg":"","rendition":[],"name":"X Offset","placeholderText":"","optionsService":"NONE","id":"X Offset","clazz":"","validate":""},{"dependsOn":"","defaultValue":"","groupId":"","tooltip":"","multiple":false,"colWidth":100,"instructionalText":"","serviceBasedFeatureToggle":"DEFAULT","type":"AS_DEFINED","validateMsg":"","rendition":[],"name":"Y Offset","placeholderText":"","optionsService":"NONE","id":"Y Offset","clazz":"","validate":""}]}]},{"id":"tryHacl","returnClazz":"void","attributes":{"returnClass":"AS_DEFINED","name":"IBM Try HACL","description":"IBM3270Library:v1.0.0: Trying HACL","iconClass":"jf-console"},"parameters":[]},{"id":"getTextAtLine","returnClazz":"java.lang.String","attributes":{"returnClass":"AS_DEFINED","name":"IBM Get Text at Line","description":"IBM3270Library:v1.0.0: Takes in a line number (emulator y coordinate starting at 1) and returns the text at that line","iconClass":"jf-console"},"parameters":[{"id":"arg0","clazz":"com.novayre.jidoka.client.api.SDKParameterMap","enumValues":[],"attributes":{"jsonMap":"","defaultValue":"","name":"Nested parameters","type":"NESTED"},"nestedParameters":[{"dependsOn":"","defaultValue":"","groupId":"","tooltip":"","multiple":false,"colWidth":100,"instructionalText":"","serviceBasedFeatureToggle":"DEFAULT","type":"AS_DEFINED","validateMsg":"","rendition":[],"name":"Line Number","placeholderText":"","optionsService":"NONE","id":"Line Number","clazz":"","validate":""}]}]}]}