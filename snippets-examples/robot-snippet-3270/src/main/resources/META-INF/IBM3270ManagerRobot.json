{"id":"IBM3270ManagerRobot","robotType":"ROBOT","mainClass":"com.appian.rpa.snippets.examples.IBM3270ManagerRobot","actions":["init","open3270","goToNetView","changePassword","close3270","end"],"conditionalActions":["startUp"],"fieldLinks":[],"actionDetails":[{"id":"init","implementation":"/**\n\t * Action 'Init'.\n\t * <p>\n\t * Initializes Jidoka modules. Instances of the emulator type passed as a\n\t * parameter are loaded\n\t */\npublic void init() {\n    try {\n        String emulator = server.getParameters().get(\"Emulator\");\n        if (emulator.equals(\"wc3270\")) {\n            commons = new  WC3270EmulatorManager(this);\n        } else {\n            commons = new  PCOMMEmulatorManager(this);\n        }\n        appManager = new  IBM3270AppManager(commons);\n        server.debug(\"Robot initialized\");\n    } catch (Exception e) {\n        throw new  JidokaFatalException(\"Error initializing\");\n    }\n}"},{"id":"open3270","implementation":"/**\n\t * Action 'Open 3270' terminal\n\t */\npublic void open3270() {\n    try {\n        server.info(\"Opening 3270 terminal\");\n        currentPage = appManager.openIBM3270();\n        server.sendScreen(\"Screenshot after opening the terminal\");\n    } catch (JidokaException e) {\n        throw new  JidokaFatalException(\"Error opening the terminal\");\n    }\n}"},{"id":"goToNetView","implementation":"/**\n\t * Action 'Go to NetView' page.\n\t * \n\t * @throws JidokaException\n\t */\npublic void goToNetView() throws JidokaException {\n    server.sendScreen(\"Screenshot before moving to NetView page\");\n    currentPage = ((WelcomePage) currentPage).goToPage(\"NETVIEW\");\n    server.sendScreen(\"Moved to NetView page\");\n}"},{"id":"changePassword","implementation":"/**\n\t * Action 'Change password'.\n\t * \n\t * @throws JidokaException\n\t */\npublic void changePassword() throws JidokaException {\n    server.info(\"Change NetView Password\");\n    ChangePwdPage changePwd = ((NetViewPage) currentPage).goToChangePasswordPage();\n    currentPage = changePwd.changeOperatorPassword();\n}"},{"id":"close3270","implementation":"/**\n\t * Action 'Close 3270'.\n\t */\npublic void close3270() {\n    server.info(\"Closing IBM3270 terminal\");\n    appManager.closeIBM3270(commons.getWindowTitleRegex());\n}"},{"id":"end","implementation":"/**\n\t * Action 'End'.\n\t */\npublic void end() {\n}"}],"conditionalActionDetails":[{"id":"startUp","implementation":"/**\n\t * Startup method. This <code>startUp</code> method is called prior to calling\n\t * the first workflow method defined\n\t */\n@SuppressWarnings(\"unchecked\")\n@Override\npublic boolean startUp() throws Exception {\n    server = (IJidokaServer<Serializable>) JidokaFactory.getServer();\n    client = IClient.getInstance(this);\n    return true;\n}"}],"sdkMethods":[]}